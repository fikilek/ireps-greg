{"version":3,"file":"static/js/951.8e2c8960.chunk.js","mappings":"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","sources":["components/table/TableWrapper.jsx","components/tabs/erfsTabs/tabsMap/TabsErfsClusterMap.jsx","components/tabs/erfsTabs/tabsTable/TabsErfsTable.jsx","components/tabs/erfsTabs/TabsErfs.jsx"],"sourcesContent":["import React from 'react'\r\nimport './TableWrapper.css'\r\n\r\nconst TableWrapper = (props) => {\r\n  return (\r\n    <div className='table-wrapper' >\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableWrapper","import React, { useState, useRef, useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport useSupercluster from \"use-supercluster\";\r\nimport \"./TabsErfsClusterMap.css\";\r\n// import ratandab from \"../../../../data/cadastral/lesedi/ratandab.geojson\";\r\nimport lesediObedNkosiA from \"../../../../data/cadastral/lesedi/ObedNkosi/lesediObedNkosiA.geojson\";\r\nimport useModal from \"../../../../hooks/useModal\";\r\nimport useGeoLocation from \"../../../../hooks/useGeolocation\";\r\n\r\nconst Marker = ({ children }) => children;\r\n\r\nexport function TabsErfsClusterMap(props) {\r\n\t// console.log(`props`, props);\r\n\r\n\tconst mapRef = useRef();\r\n\t// console.log(`mapRef`, mapRef);\r\n\r\n\tconst { openModal } = useModal();\r\n\r\n\tconst [erfs, setErfs] = useState(props.rowData);\r\n\t// console.log(`erfs`, erfs);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetErfs(props.rowData);\r\n\t}, [props.rowData]);\r\n\r\n\t// get user location\r\n\tconst { setGeolocation, userGps } = useGeoLocation();\r\n\t// console.log(`userGps`, userGps);\r\n\r\n\t// setGeolocation();\r\n\r\n\tconst points = erfs?.map(erf => {\r\n\t\t// console.log(`erf`, erf);\r\n\t\t// const lat = erf.address.gps.latitude;\r\n\t\t// const lng = erf.address.gps.longitude;\r\n\r\n\t\treturn {\r\n\t\t\ttype: \"Feature\",\r\n\t\t\tproperties: { cluster: false, erfId: erf.id, erf: erf },\r\n\t\t\tgeometry: {\r\n\t\t\t\ttype: \"Point\",\r\n\t\t\t\tcoordinates: [\r\n\t\t\t\t\tparseFloat(erf.address.gps.longitude),\r\n\t\t\t\t\tparseFloat(erf.address.gps.latitude),\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n\t// console.log(`points`, points);\r\n\r\n\tconst [bounds, setBounds] = useState([]);\r\n\t// console.log(`bounds`, bounds);\r\n\tconst [zoom, setZoom] = useState(10);\r\n\t// console.log(`zoom`, zoom)\r\n\r\n\t// console.log(`######################################################`);\r\n\t// console.log(`bounds`, bounds);\r\n\t// console.log(`zoom`, zoom);\r\n\r\n\tconst result = useSupercluster({\r\n\t\tpoints,\r\n\t\tbounds,\r\n\t\tzoom,\r\n\t\toptions: { radius: 75, maxZoom: 20 },\r\n\t});\r\n\r\n\tconst { clusters, supercluster } = result;\r\n\t// console.log(`clusters`, clusters);\r\n\t// console.log(`supercluster`, supercluster);\r\n\r\n\t// erf search/filter *************************************************\r\n\r\n\tconst [selectedErf, setSelectedErf] = useState(\"\");\r\n\t// console.log(`selectedErf`, selectedErf);\r\n\tconst [erfSearch, setErfSearch] = useState(\"\");\r\n\t// console.log(`erfSearch`, erfSearch);\r\n\tconst [filteredErfs, setFilteredErfs] = useState(\"\");\r\n\t// console.log(`filteredErfs`, filteredErfs);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(`erfs`, erfs);\r\n\t\tconst filteredErfs = erfs?.filter(erf => erf.erfNo.includes(erfSearch));\r\n\t\tconsole.log(`filteredErfs`, filteredErfs);\r\n\t\tsetFilteredErfs(filteredErfs);\r\n\t}, [erfSearch]);\r\n\r\n\t// console.log(`erfSearch.length`, erfSearch.length);\r\n\tconst hideShow = erfSearch?.length > 0 ? \"show-erfs\" : \"hide-erfs\";\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedErf) {\r\n\t\t\tconst lat = selectedErf?.address?.gps?.latitude;\r\n\t\t\tconst lng = selectedErf?.address?.gps?.longitude;\r\n\t\t\tconsole.log(`mapRef.current`, mapRef.current);\r\n\t\t\t// console.log(`zoom`, zoom);\r\n\t\t\tmapRef.current?.panTo({ lat, lng });\r\n\t\t\tmapRef.current?.setZoom(20);\r\n\t\t}\r\n\t}, [selectedErf]);\r\n\r\n\tconst selectErf = erf => {\r\n\t\t// console.log(`erf`, erf);\r\n\t\tsetSelectedErf(erf);\r\n\t};\r\n\r\n\tconst onMapLoad = mapObjects => {\r\n\t\t// console.log(`myMapObjects`, mapObjects);\r\n\t\tconst { map, maps } = mapObjects;\r\n\t\t// console.log(`mapRef`, mapRef);\r\n\t\tmapRef.current = map;\r\n\t\t// console.log(`mapRef`, mapRef);\r\n\t\t// console.log(`clusters`, clusters);\r\n\t\tmapRef.current?.data?.loadGeoJson(lesediObedNkosiA);\r\n\t\tmapRef.current?.data?.setStyle({\r\n\t\t\tfillOpacity: 0.0,\r\n\t\t});\r\n\t\t// mapRef.data.addListener(\"click\", handleErfClick);\r\n\t};\r\n\r\n\t// this will fire everytime there is a click on the marker\r\n\tconst handleMarkerClick = (id, lat, lng) => {\r\n\t\tmapRef.current?.panTo({ lat, lng });\r\n\r\n\t\t// get erf data using erf id\r\n\t\tconst erf = erfs.find(erf => erf.id === id);\r\n\t\t// console.log(`erf`, erf);\r\n\r\n\t\tif (erf) {\r\n\t\t\topenModal({\r\n\t\t\t\tmodalName: \"tabsErfMapInfoWrapper\",\r\n\t\t\t\tpayload: erf,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// map options\r\n\tvar options = {\r\n\t\t// panControl: true,\r\n\t\t// zoomControl: true,\r\n\t\tmapTypeControl: true,\r\n\t\t// scaleControl: true,\r\n\t\t// streetViewControl: true,\r\n\t\toverviewMapControl: true,\r\n\t\trotateControl: true,\r\n\t\tfullscreenControl: false,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"tabs-erfs-map\">\r\n\t\t\t<div className=\"search-box\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"erf-search\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\" enter erf no\"\r\n\t\t\t\t\tonChange={e => setErfSearch(e.target.value)}\r\n\t\t\t\t\tvalue={erfSearch}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={`search-dropdown ${hideShow} `}>\r\n\t\t\t\t\t{filteredErfs &&\r\n\t\t\t\t\t\tfilteredErfs?.map(erf => {\r\n\t\t\t\t\t\t\t// console.log(`erf`, erf);\r\n\t\t\t\t\t\t\tconst erfNo = erf?.erfNo;\r\n\t\t\t\t\t\t\tconst unitName = erf.propertyType?.unitName\r\n\t\t\t\t\t\t\t\t? `| ${erf.propertyType?.unitName}`\r\n\t\t\t\t\t\t\t\t: \"\";\r\n\t\t\t\t\t\t\tconst unitNo = erf.propertyType?.unitNo\r\n\t\t\t\t\t\t\t\t? `| ${erf.propertyType?.unitNo}`\r\n\t\t\t\t\t\t\t\t: \"\";\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<p key={erf.id} onClick={() => selectErf(erf)}>\r\n\t\t\t\t\t\t\t\t\t{`${erfNo} ${unitName} ${unitNo} `}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<GoogleMapReact\r\n\t\t\t\tbootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\r\n\t\t\t\tdefaultCenter={{ lat: -26.56924, lng: 28.32348 }}\r\n\t\t\t\tcenter={{\r\n\t\t\t\t\tlat: userGps?.coordinates?.lat,\r\n\t\t\t\t\tlng: userGps?.coordinates?.lng,\r\n\t\t\t\t}}\r\n\t\t\t\tdefaultZoom={16}\r\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\r\n\t\t\t\tonGoogleApiLoaded={onMapLoad}\r\n\t\t\t\tonChange={args => {\r\n\t\t\t\t\t// console.log(`args`, args);\r\n\t\t\t\t\tconst { zoom, bounds } = args;\r\n\t\t\t\t\tsetZoom(zoom);\r\n\t\t\t\t\tsetBounds([bounds.nw.lng, bounds.se.lat, bounds.se.lng, bounds.nw.lat]);\r\n\t\t\t\t}}\r\n\t\t\t\toptions={options}\r\n\t\t\t>\r\n\t\t\t\t{clusters.map(cluster => {\r\n\t\t\t\t\t// console.log(`cluster?.properties?.erf`, cluster?.properties?.erf);\r\n\r\n\t\t\t\t\tconst anomaly = false;\r\n\r\n\t\t\t\t\tconst [longitude, latitude] = cluster.geometry.coordinates;\r\n\t\t\t\t\tconst { cluster: isCluster, point_count: pointCount } = cluster.properties;\r\n\t\t\t\t\tconst erfNo = cluster?.properties?.erf?.erfNo;\r\n\t\t\t\t\tconst id = cluster?.properties?.erf?.id;\r\n\t\t\t\t\tconst hasAsts =\r\n\t\t\t\t\t\tcluster?.properties?.erf?.asts?.length > 0 ? \"has-asts\" : \"\";\r\n\r\n\t\t\t\t\tif (cluster?.properties?.erf?.asts?.length > 0) {\r\n\t\t\t\t\t\t// console.log(`erf with asts`, cluster?.properties?.erf);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst hasAnomaly = anomaly ? \"has-anomaly\" : \"\";\r\n\r\n\t\t\t\t\tif (isCluster) {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Marker key={`${cluster.id}`} lat={latitude} lng={longitude}>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"cluster-marker\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: `${10 + (pointCount / points.length) * 20}px`,\r\n\t\t\t\t\t\t\t\t\t\theight: `${10 + (pointCount / points.length) * 20}px`,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tconst expansionZoom = Math.min(\r\n\t\t\t\t\t\t\t\t\t\t\tsupercluster.getClusterExpansionZoom(cluster.id),\r\n\t\t\t\t\t\t\t\t\t\t\t20\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\tmapRef.current.setZoom(expansionZoom);\r\n\t\t\t\t\t\t\t\t\t\tmapRef.current.panTo({ lat: latitude, lng: longitude });\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{pointCount}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Marker\r\n\t\t\t\t\t\t\tkey={`${cluster.properties.erfId}`}\r\n\t\t\t\t\t\t\tlat={latitude}\r\n\t\t\t\t\t\t\tlng={longitude}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName={`erf-marker`}\r\n\t\t\t\t\t\t\t\tonClick={() => handleMarkerClick(id, latitude, longitude)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<span className={`erf-no ${hasAsts} ${hasAnomaly}`}>{erfNo}</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Marker>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<Marker\r\n\t\t\t\t\tposition={{ lat: userGps.coordinates.lat, lng: userGps.coordinates.lng }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"userGpsPosition\"></div>\r\n\t\t\t\t</Marker>\r\n\t\t\t</GoogleMapReact>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./tabsErfsTable.css\";\r\n\r\nimport \"react-tippy/dist/tippy.css\";\r\nimport Table from \"../../../table/Table\";\r\nimport TableAddRecordBtn from \"../../../table/tableBtns/TableAddRecordBtn\";\r\nimport TableWrapper from \"../../../table/TableWrapper\";\r\n\r\nconst showTableAddRecordBtn = (ml1, ml2, ml3, nfd, fn) => {\r\n\tif (ml1 === \"asts\" || ml1 === \"trns\" || ml1 === \"erfs\") return null;\r\n\treturn <TableAddRecordBtn nfd={nfd} fn={fn} />;\r\n};\r\n\r\nconst TabsErfsTable = props => {\r\n\t// console.log(`props`, props);\r\n\tconst { ml1, tn, ml3, nfd, fn, rowData, columnDefs, setSelectedRows } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TableWrapper rowData={rowData} columnDefs={columnDefs} ml1={ml1}>\r\n\t\t\t\t<Table\r\n\t\t\t\t\trowData={rowData}\r\n\t\t\t\t\tcolumnDefs={columnDefs}\r\n\t\t\t\t\tsetSelectedRows={setSelectedRows}\r\n\t\t\t\t\tml1={ml1}\r\n\t\t\t\t/>\r\n\t\t\t</TableWrapper>\r\n\r\n\t\t\t{showTableAddRecordBtn(ml1, tn, ml3, nfd, fn)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TabsErfsTable;\r\n\r\n// TODO: mouse over tips on the table skipHeader\r\n","import { Timestamp } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { timestamp } from \"../../../firebaseConfig/fbConfig\";\r\nimport useAuthContext from \"../../../hooks/useAuthContext\";\r\nimport useModal from \"../../../hooks/useModal\";\r\nimport { formSects } from \"../../forms/formComponents/formSections/formSects\";\r\nimport \"./TabsErfs.css\";\r\nimport { TabsErfsClusterMap } from \"./tabsMap/TabsErfsClusterMap\";\r\n// import TabsErfsMap from \"./tabsMap/TabsErfsMap\";\r\nimport TabsErfsTable from \"./tabsTable/TabsErfsTable\";\r\nimport TabsErfsTree from \"./tabsTree/TabsErfsTree\";\r\n\r\n// prepare asts for trn by going to th erf and get each ast in the erf and prepare an array of all of them\r\nconst getTrnObjectsArray = erf => {\r\n\tconsole.log(`erf`, erf);\r\n\r\n\t// an erf already has an array of all asts in it. They are in asts property. Go inside asts property and extract needed astData as well as catInstallation ( and catCommissining data if it there).\r\n\r\n\t// step 1: destructire asts array\r\n\tconst { asts } = erf;\r\n\tconsole.log(`asts`, asts);\r\n\r\n\tif (!asts) return null;\r\n\r\n\t// create astData object. THis will go into trn inspection object\r\n\tconst astData = {};\r\n\r\n\t// step 2: iterate through asts to get each ast\r\n\tasts &&\r\n\t\tasts.forEach(ast => {\r\n\t\t\t// console.log(`ast---------------------------------`, ast);\r\n\r\n\t\t\t// destructure astId\r\n\t\t\tconst { astId } = ast;\r\n\t\t\tconsole.log(`astId`, astId);\r\n\r\n\t\t\t// get astCat from ast\r\n\t\t\tconst astCat = ast.astData.astCartegory;\r\n\t\t\t// console.log(`astCat`, astCat);\r\n\r\n\t\t\t// get trnData from formSects and insert into ast\r\n\t\t\tconst { trnData } = formSects[astCat].inspection;\r\n\t\t\t// console.log(`trnData`, trnData);\r\n\r\n\t\t\t// insrt into ast\r\n\t\t\tast = {\r\n\t\t\t\t...ast,\r\n\t\t\t\ttrnData,\r\n\t\t\t};\r\n\r\n\t\t\tif (astCat) {\r\n\t\t\t\tif (!astData[astCat]) {\r\n\t\t\t\t\t// we dont have astData[astCat], create it\r\n\t\t\t\t\tastData[astCat] = [];\r\n\t\t\t\t\t// console.log(`astData[astCat]`, astData[astCat]);\r\n\r\n\t\t\t\t\t// remove trnMetaData rom ast\r\n\t\t\t\t\tdelete ast.trnMetaData;\r\n\t\t\t\t\t// console.log(`ast`, ast);\r\n\r\n\t\t\t\t\t// push trnObject into astData[astCat]\r\n\t\t\t\t\tastData[astCat].push(ast);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// console.log(`astCat [${astCat}] alrerady EXIST in the mix`);\r\n\r\n\t\t\t\t\t// we already have astData[astCat]. Check is astId is already present in astData[astCat].\r\n\t\t\t\t\tconst astIdExist = astData[astCat].some(ast => ast.astId === astId);\r\n\t\t\t\t\tif (astIdExist) {\r\n\t\t\t\t\t\t// There already is astId in the mix\r\n\t\t\t\t\t\t// console.log(`There is astId`, astId);\r\n\r\n\t\t\t\t\t\t// removeastData and trnMetaData rom ast\r\n\t\t\t\t\t\tdelete ast.trnMetaData;\r\n\t\t\t\t\t\tdelete ast.astData;\r\n\t\t\t\t\t\tdelete ast.astId;\r\n\t\t\t\t\t\t// console.log(`ast`, ast);\r\n\r\n\t\t\t\t\t\t// extract data\r\n\t\t\t\t\t\tconst astTrnName = Object.entries(ast)[0][0];\r\n\t\t\t\t\t\t// console.log(`astTrnName`, astTrnName);\r\n\r\n\t\t\t\t\t\t// fint the index of the existing astId\r\n\t\t\t\t\t\tconst astIdIndex = astData[astCat].findIndex(ast => ast.astId === astId);\r\n\t\t\t\t\t\t// console.log(`astIdIndex`, astIdIndex);\r\n\r\n\t\t\t\t\t\t// insert ast into astData.[astCat][index]\r\n\t\t\t\t\t\tastData[astCat][astIdIndex] = {\r\n\t\t\t\t\t\t\t...astData[astCat][astIdIndex],\r\n\t\t\t\t\t\t\t[astTrnName]: ast[astTrnName],\r\n\t\t\t\t\t\t\t// trnData\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t// astData[astCat].with(Number(astIdIndex), ast[`${astCat}Commissioning`] );\r\n\t\t\t\t\t\t// console.log(`astData[astCat][astIdIndex]`, astData[astCat][astIdIndex]);\r\n\t\t\t\t\t\t// console.log(`astData[${astCat}]`, astData[astCat]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// there is no astId yet\r\n\t\t\t\t\t\t// console.log(`There is NO astId`, astId);\r\n\t\t\t\t\t\t// push trnObject into astData[astCat]\r\n\t\t\t\t\t\tastData[astCat].push(ast);\r\n\t\t\t\t\t\t// console.log(`astData[astCat]`, astData[astCat]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t// console.log(`astData`, astData);\r\n\r\n\treturn astData;\r\n};\r\n\r\n// create a trn for each row {metaData, erfData, tranData}\r\nconst getNewTrnsArray = (selectedRows, trnType, user) => {\r\n\t// console.log(`selectedRows`, selectedRows);\r\n\tconst trns = [];\r\n\r\n\t// console.log(`astData`, astData)\r\n\r\n\tif (selectedRows.lenght === 0) return trns;\r\n\r\n\tif (selectedRows) {\r\n\t\tselectedRows.map(row => {\r\n\t\t\t// if trnType is inspection, get all asts in the erf and create astData for each\r\n\r\n\t\t\tlet astData = {};\r\n\t\t\tif (trnType === \"inspection\") {\r\n\t\t\t\tastData = getTrnObjectsArray(row);\r\n\t\t\t\t// console.log(`astData`, astData);\r\n\t\t\t\tif (!astData) return null;\r\n\t\t\t}\r\n\r\n\t\t\t// const { astsInErf, astsCount } = trnObjectsArray;\r\n\t\t\t// console.log(`astsInErf`, astsInErf);\r\n\t\t\t// console.log(`trnType`, trnType);\r\n\r\n\t\t\tif (\r\n\t\t\t\ttrnType === \"installation\" ||\r\n\t\t\t\ttrnType === \"audit\" ||\r\n\t\t\t\ttrnType === \"inspection\"\r\n\t\t\t) {\r\n\t\t\t\t// console.log(`push trn`);\r\n\t\t\t\tconst trn = {\r\n\t\t\t\t\tmetaData: {\r\n\t\t\t\t\t\tcreatedAtDatetime: Timestamp.now(),\r\n\t\t\t\t\t\tcreatedByUser: user.displayName,\r\n\t\t\t\t\t\tcreatedByUserId: user.uid,\r\n\t\t\t\t\t\tupdatedAtDatetime: Timestamp.now(),\r\n\t\t\t\t\t\tupdatedByUser: user.displayName,\r\n\t\t\t\t\t\ttrnHistory: 0, // how many times transaction has been updated\r\n\t\t\t\t\t\ttrnType: trnType, //['installation', 'inspection', 'audit']\r\n\t\t\t\t\t\ttrnNo: \"\",\r\n\t\t\t\t\t\ttrnState: \"draft\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\terfData: row,\r\n\t\t\t\t\tastData,\r\n\t\t\t\t};\r\n\t\t\t\t// console.log(`trn`, trn);\r\n\t\t\t\treturn trns.push(trn);\r\n\t\t\t}\r\n\t\t});\r\n\t\t// console.log(`trns`, trns);\r\n\t\treturn trns;\r\n\t}\r\n};\r\n\r\nconst trnOptions = [\r\n\t{ key: \"choose\", value: \"choose\" },\r\n\t{ key: \"audit\", value: \"audit\" },\r\n\t{ key: \"inspection\", value: \"inspection\" },\r\n\t// { key: \"installation\", value: \"installation\" },\r\n];\r\n\r\nconst TabsErfs = props => {\r\n\t// console.log(`TabsErfs props`, props);\r\n\r\n\tconst [trnType, setTrnType] = useState(\"\");\r\n\t// console.log(`trnType`, trnType);\r\n\r\n\tconst { purpose } = props;\r\n\t// console.log(`purpose`, purpose);\r\n\r\n\tconst [active, setActive] = useState(\"tabs-map\");\r\n\r\n\tconst [selectedRows, setSelectedRows] = useState([]);\r\n\t// console.log(`selectedRows`, selectedRows);\r\n\r\n\tconst { openModal } = useModal();\r\n\tconst { user } = useAuthContext();\r\n\r\n\tconst handleTabClick = e => {\r\n\t\t// console.log(`e.target.id`, e.target.id)\r\n\t\tsetActive(e.target.id);\r\n\t};\r\n\r\n\tconst createNewTrns = () => {\r\n\t\t// console.log(`trnType`, trnType);\r\n\t\tif (trnType) {\r\n\t\t\t// open a modal to preview the new trns only of there is trnType. The new trn btn is diabled if no trn type is selected\r\n\t\t\tconst newTrnsArray = getNewTrnsArray(selectedRows, trnType, user);\r\n\t\t\t// console.log(`newTrnsArray`, newTrnsArray);\r\n\t\t\t// step 2: open the modal. It wil be from the modal that the new trns will be sent to firebase\r\n\t\t\tif (newTrnsArray.length > 0) {\r\n\t\t\t\topenModal({\r\n\t\t\t\t\tmodalName: \"tableTrnsFromErfs\",\r\n\t\t\t\t\tpayload: { newTrnsArray, trnType },\r\n\t\t\t\t});\r\n\t\t\t\tsetTrnType(\"choose\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTrnType(\"choose\");\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"tabs\">\r\n\t\t\t<div className=\"tabs-header\">\r\n\t\t\t\t<div className=\"tab-title\">\r\n\t\t\t\t\t<p>Erfs Table</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* new trsnaction btn */}\r\n\t\t\t\t{purpose === \"firestoreErfs\" ? (\r\n\t\t\t\t\t<div className=\"new-trn-div\">\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"new-trn new-trn-btn\"\r\n\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\ttrnType === \"choose\" || selectedRows.length === 0 ? true : false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={createNewTrns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tNT\r\n\t\t\t\t\t\t</button>{\" \"}\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tclassName=\"new-trn new-trn-select\"\r\n\t\t\t\t\t\t\tvalue={trnType}\r\n\t\t\t\t\t\t\tonChange={e => setTrnType(e.target.value)}\r\n\t\t\t\t\t\t\tplaceholder=\"Store Name\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{trnOptions &&\r\n\t\t\t\t\t\t\t\ttrnOptions.map(trn => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<option key={trn.key} value={trn.value}>\r\n\t\t\t\t\t\t\t\t\t\t\t{trn.value}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div></div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* tabs */}\r\n\t\t\t\t<div className=\"tabs-btns\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`tabs-header-table ${\r\n\t\t\t\t\t\t\tactive === \"tabs-table\" ? \"tab-active\" : \"\"\r\n\t\t\t\t\t\t} tabs-tab`}\r\n\t\t\t\t\t\tid=\"tabs-table\"\r\n\t\t\t\t\t\tonClick={handleTabClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTable\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`tabs-header-map ${\r\n\t\t\t\t\t\t\tactive === \"tabs-map\" ? \"tab-active\" : \"\"\r\n\t\t\t\t\t\t} tabs-tab`}\r\n\t\t\t\t\t\tid=\"tabs-map\"\r\n\t\t\t\t\t\tonClick={handleTabClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tMap\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <div\r\n\t\t\t\t\t\tclassName={`tabs-header-tree ${\r\n\t\t\t\t\t\t\tactive === \"tabs-tree\" ? \"tab-active\" : \"\"\r\n\t\t\t\t\t\t} tabs-tab`}\r\n\t\t\t\t\t\tid=\"tabs-tree\"\r\n\t\t\t\t\t\tonClick={handleTabClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTree\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <div className=\"tab-name\">{ml1}</div> */}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tabs-body\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`tabs-body-content tabs-table ${\r\n\t\t\t\t\t\tactive === \"tabs-table\" ? \"tabs-show\" : \"tabs-hide\"\r\n\t\t\t\t\t}  `}\r\n\t\t\t\t\tid=\"tabs-table\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<TabsErfsTable {...props} setSelectedRows={setSelectedRows} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`tabs-body-content tabs-map ${\r\n\t\t\t\t\t\tactive === \"tabs-map\" ? \"tabs-show\" : \"tabs-hide\"\r\n\t\t\t\t\t} `}\r\n\t\t\t\t\tid=\"tabs-map\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* <TabsErfsMap {...props} /> */}\r\n\t\t\t\t\t<TabsErfsClusterMap {...props} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`tabs-body-content tabs-tree ${\r\n\t\t\t\t\t\tactive === \"tabs-tree\" ? \"tabs-show\" : \"tabs-hide\"\r\n\t\t\t\t\t} `}\r\n\t\t\t\t\tid=\"tabs-tree\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* <TabsErfsTree {...props} /> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TabsErfs;\r\n"],"names":["props","_jsx","className","children","Marker","_ref","TabsErfsClusterMap","_userGps$coordinates","_userGps$coordinates2","mapRef","useRef","openModal","useModal","_useState","useState","rowData","_useState2","_slicedToArray","erfs","setErfs","useEffect","_useGeoLocation","useGeoLocation","userGps","setGeolocation","points","map","erf","type","properties","cluster","erfId","id","geometry","coordinates","parseFloat","address","gps","longitude","latitude","_useState3","_useState4","bounds","setBounds","_useState5","_useState6","zoom","setZoom","result","useSupercluster","options","radius","maxZoom","clusters","supercluster","_useState7","_useState8","selectedErf","setSelectedErf","_useState9","_useState10","erfSearch","setErfSearch","_useState11","_useState12","filteredErfs","setFilteredErfs","filter","erfNo","includes","console","log","hideShow","length","_selectedErf$address","_selectedErf$address$","_selectedErf$address2","_selectedErf$address3","_mapRef$current","_mapRef$current2","lat","lng","current","panTo","_jsxs","placeholder","onChange","e","target","value","concat","_erf$propertyType","_erf$propertyType2","_erf$propertyType3","_erf$propertyType4","unitName","propertyType","unitNo","onClick","selectErf","GoogleMapReact","bootstrapURLKeys","key","process","defaultCenter","center","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","mapObjects","_mapRef$current3","_mapRef$current3$data","_mapRef$current4","_mapRef$current4$data","maps","data","loadGeoJson","lesediObedNkosiA","setStyle","fillOpacity","args","nw","se","mapTypeControl","overviewMapControl","rotateControl","fullscreenControl","_cluster$properties2","_cluster$properties2$","_cluster$properties3","_cluster$properties3$","_cluster$properties4","_cluster$properties4$","_cluster$properties4$2","_cluster$properties5","_cluster$properties5$","_cluster$properties5$2","_cluster$geometry$coo","_cluster$properties","isCluster","pointCount","point_count","hasAsts","asts","style","width","height","expansionZoom","Math","min","getClusterExpansionZoom","_mapRef$current5","find","modalName","payload","handleMarkerClick","position","showTableAddRecordBtn","ml1","ml2","ml3","nfd","fn","TableAddRecordBtn","tn","columnDefs","setSelectedRows","_Fragment","TableWrapper","Table","getNewTrnsArray","selectedRows","trnType","user","trns","lenght","row","astData","forEach","ast","astId","astCat","astCartegory","trnData","formSects","inspection","_objectSpread","astIdExist","some","trnMetaData","astTrnName","Object","entries","astIdIndex","findIndex","_defineProperty","push","getTrnObjectsArray","trn","metaData","createdAtDatetime","Timestamp","now","createdByUser","displayName","createdByUserId","uid","updatedAtDatetime","updatedByUser","trnHistory","trnNo","trnState","erfData","trnOptions","setTrnType","purpose","active","setActive","useAuthContext","handleTabClick","disabled","newTrnsArray","TabsErfsTable"],"sourceRoot":""}